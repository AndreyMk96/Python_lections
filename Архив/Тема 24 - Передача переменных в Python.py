"""Тема 24 - Передача переменных в Python"""
# Передача неизменяемого объекта
def foo(x):
    print(x, id(x))
    x = 4
    print(x, id(x))


a = 3
print(a, id(a))
foo(a)
print(a, id(a))

# Видно, что функция принимает тот же самый объект, однако, при его изменении, он становится другим объектом,
# старый при этом не удаляется

# Попробуем тоже самое со строками
def foo2(x):
    print(x, id(x))
    x = x[::-1]
    print(x, id(x))


b = "Andrey"
print(b, id(b))
foo2(b)
print(b, id(b))

# Передача изменяемого объекта
def foo3(x):
    print(x, id(x))
    x.append(100)
    print(x, id(x))

c = [1, 2, 3]
print(c, id(c))
foo3(c)
print(c, id(c))

# Видно, что это один и тот же объект

# В Python используется передача параметров через присваивание(связывание)
# При вызове функции каждый параметр связывается с соответствующим объектом, указанным в сигнатуре функции.
# Так, если мы передаем неизменяемые параметр (например, int), то у нас нет возможности хоть как-то его изменить.
# Каждый раз, когда используется присваивание, то создается новый объект, хоть и имеющий то же самое имя.
# Изменяемые объекты, которые передаются в качестве параметров, могут быть изменены, точнее их содержимое.

