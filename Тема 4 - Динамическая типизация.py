"""Тема 4 - Динамическая типизация"""

# Язык обладает статической типизацией, если тип переменной известен во время компиляции, а не выполнения
# Преимущества статической типизации, является возможность отловить ошибки типов на стадии компиляции, и
# более быстрое исполнение программы, т. к. компилятор знает точные типы и создает оптимизированный машинный код

# Динамическая типизация - в разные моменты выполнения программы переменная ссылается на разные объекты
# Динамическая типизация открывает дорогу к более мощным техникам программирования, например метапрограммированию
# В языках со статической типизацией была бы ошибка Redefinition, в Python все работает
my_car = "Skoda Rapid"
my_car = 111
print(my_car)

print(type(my_car))  # Фукция type указывает тип переменной
print(isinstance(my_car, int))  # Функция isinstance определяет принадлежит ли объект к определенному типу данных
print(id(my_car))  # Функция id возвращает номер объекта в оперативной памяти
car = my_car
print(id(car))  # Если две переменные указывают на один объект, то они имеют одинаковый идентификатор
