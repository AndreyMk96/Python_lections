"""Тема 6 - Списки"""
# Список относится к составным типам
# Список это составной объект, который упорядоченно хранит ссылки на другие объекты
my_list = []  # Пустой список
my_list = [1, 2, 3, 4, 5]  # Список из чисел
my_list = [1, 2, "hello", 4, 5]  # Список может хранить ссылки на объекты разных типов
a = 100
my_list = [1, 2, "hello", 4, a, 5]  # Список может хранить и переменные и объекты
print(my_list[2])  # К элементу списка можно обратиться по индексу
print(my_list[-3])  # К элементу списка можно обратиться по негативному индексу
# Индексы элементов списка начинаются с нуля
print(my_list[:3])  # Выведутся элементы с начала списка до третьего элемента
print(my_list[-2:])  # Выведутся все элементы от -2 до конца
print(my_list[::2])  # Выведутся все элементы от начала до конца с шагом 2
print(my_list[::-1])  # Список выведется наоборот
my_list.append("world")  # Добавление элемента в список
print(my_list)
my_list.extend([3, 2, 1])  # Метод extend расширяет список, добавляя в конец все элементы другого списка
print(my_list)
my_list.insert(3, "aaa")
print(my_list)
del (my_list[5])  # Удаление элемента списка по индексу. del - это оператор языка, может применяться и к
# другим типам данных
print(my_list)
my_list.remove(2)  # Удаление элемента по значению. Метод remove удаляет первый элемент с заданным значением
my_list = my_list + [6, 7, 8]  # Операция сложения списков
print(my_list)
my_list *= 2  # Умножение списков
print(my_list)
matrix = [[1,2,3],[1,2,3],[1,2,3]]  # Список из списков (Двумерный список)
print(matrix[2][1])  # Обращение к элементу двумерного списка
# Сравнение списков происходит по элементам
print([1,2,3] < [4, 5])  # True
print([1, 2, 3] < [1, 2, 3, 4])  # True
print(1 in my_list)  # Проверка вхождения элемента в список
c = list([100, 1, 2, 10, 3]) # Еще один способ создания списка
print(c)
print(my_list.count(5))  # Возвращает количество элементов со значением 5
print(min(c))  # Возвращает минимальный элемент. Корректно работает только на списке из чисел
print(max(c))  # Вовращает максимальный элемент. Корректно работает только на списке из чисел
c.sort()  # Функция sort сортирует список по возрастанию
print(c)
